// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderSchema function should render proper tree given schema all-of.json 1`] = `
Array [
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={1}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          id
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="string"
          >
            string
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        Group ID
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "Group ID",
            "type": "string",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
]
`;

exports[`renderSchema function should render proper tree given schema nested-properties.json 1`] = `
Array [
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="pointer"
    level={0}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <Unknown
      justifyContent="center"
      ml="-1.5rem"
      mr="0.5rem"
      pl="0.5rem"
      width="1rem"
    >
      <Unknown
        fontSize="1em"
        icon={
          Object {
            "icon": Array [
              320,
              512,
              Array [],
              "f0d7",
              "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
            ],
            "iconName": "caret-down",
            "prefix": "fas",
          }
        }
      />
    </Unknown>
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <div>
          <Unknown
            as="span"
            type="object"
          >
            object
          </Unknown>
        </div>
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": undefined,
            "properties": Object {
              "members": Object {
                "description": "List of Group members",
                "items": Object {
                  "properties": Object {
                    "email": Object {
                      "description": "User email. If ID given, email is ignored.",
                      "type": "string",
                    },
                    "id": Object {
                      "description": "User ID.",
                      "type": "string",
                    },
                  },
                },
                "maximum": 30,
                "type": "array",
              },
            },
            "type": "object",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="pointer"
    level={1}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <Unknown
      justifyContent="center"
      ml="-1.5rem"
      mr="0.5rem"
      pl="0.5rem"
      width="1rem"
    >
      <Unknown
        fontSize="1em"
        icon={
          Object {
            "icon": Array [
              320,
              512,
              Array [],
              "f0d7",
              "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
            ],
            "iconName": "caret-down",
            "prefix": "fas",
          }
        }
      />
    </Unknown>
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          members
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="array"
          >
            array
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        List of Group members
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <ForwardRef
        fontSize="0.75rem"
      />
      <Unknown
        prop={
          Object {
            "description": "List of Group members",
            "items": Object {
              "properties": Object {
                "email": Object {
                  "description": "User email. If ID given, email is ignored.",
                  "type": "string",
                },
                "id": Object {
                  "description": "User ID.",
                  "type": "string",
                },
              },
            },
            "maximum": 30,
            "type": "array",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={2}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          email
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="string"
          >
            string
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        User email. If ID given, email is ignored.
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "User email. If ID given, email is ignored.",
            "type": "string",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={2}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          id
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="string"
          >
            string
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        User ID.
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "User ID.",
            "type": "string",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
]
`;

exports[`renderSchema function should render proper tree given schema properties.json 1`] = `
Array [
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="pointer"
    level={0}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <Unknown
      justifyContent="center"
      ml="-1.5rem"
      mr="0.5rem"
      pl="0.5rem"
      width="1rem"
    >
      <Unknown
        fontSize="1em"
        icon={
          Object {
            "icon": Array [
              320,
              512,
              Array [],
              "f0d7",
              "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
            ],
            "iconName": "caret-down",
            "prefix": "fas",
          }
        }
      />
    </Unknown>
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <div>
          <Unknown
            as="span"
            type="object"
          >
            object
          </Unknown>
        </div>
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": undefined,
            "properties": Object {
              "id": Object {
                "description": "Group ID",
                "type": "string",
              },
              "name": Object {
                "description": "Group name",
                "type": "string",
              },
              "total_members": Object {
                "description": "Group member count",
                "type": "integer",
              },
            },
            "type": "object",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={1}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          id
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="string"
          >
            string
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        Group ID
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "Group ID",
            "type": "string",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={1}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          name
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="string"
          >
            string
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        Group name
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "Group name",
            "type": "string",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
  <Unknown
    alignItems="center"
    as={[Function]}
    cursor="default"
    level={1}
    onClick={[Function]}
    position="relative"
    py={7}
  >
    <ForwardRef
      flex="1 1 0%"
    >
      <Unknown
        alignItems="baseline"
      >
        <ForwardRef
          mr={11}
        >
          total_members
        </ForwardRef>
        <div>
          <Unknown
            as="span"
            type="integer"
          >
            integer
          </Unknown>
        </div>
      </Unknown>
      <Unknown
        fontSize=".875rem"
        pt={4}
      >
        Group member count
      </Unknown>
    </ForwardRef>
    <ForwardRef
      fontSize=".75rem"
      maxWidth="30rem"
      pr={11}
      textAlign="right"
    >
      <Unknown
        prop={
          Object {
            "description": "Group member count",
            "type": "integer",
          }
        }
      />
    </ForwardRef>
  </Unknown>,
]
`;
